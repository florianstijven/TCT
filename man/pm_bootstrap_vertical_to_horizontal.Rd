% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametric-bootstrap.R
\name{pm_bootstrap_vertical_to_horizontal}
\alias{pm_bootstrap_vertical_to_horizontal}
\title{Parametric Bootstrap for Time-Specific Acceleration Factors}
\usage{
pm_bootstrap_vertical_to_horizontal(
  time_points,
  ctrl_estimates,
  exp_estimates,
  vcov,
  interpolation = "spline",
  B = 100,
  null = FALSE,
  constraints
)
}
\arguments{
\item{B}{Number of bootstrap replications.}

\item{null}{(boolean): conduct the bootstrap under the null hypothesis of no
treatment effect? Defaults to \code{FALSE}.}
}
\value{
A \eqn{(B \times K)} matrix where the \eqn{b}'th row corresponds to
\eqn{\hat{\boldsymbol{\gamma}}^b} and \eqn{K = } \code{length(exp_estimates)}.
}
\description{
The \code{\link[=pm_bootstrap_vertical_to_horizontal]{pm_bootstrap_vertical_to_horizontal()}} function implements a parametric
bootstrap for the time-specific acceleration factors.
}
\details{
We can write the slowing factor at \eqn{\boldsymbol{t} = (t_1, ..., t_K)'}
as a function of the the mean parameters,
\deqn{
\boldsymbol{\gamma} = \boldsymbol{\gamma}(\boldsymbol{t}; \boldsymbol{\alpha}, \boldsymbol{\beta}).
}
Further assume that \eqn{\hat{\boldsymbol{\alpha}}} and \eqn{\hat{\boldsymbol{\beta}}}
are normally distributed,
\deqn{
(\hat{\boldsymbol{\alpha}}, \hat{\boldsymbol{\beta}})' \sim N\left( (\boldsymbol{\alpha_0}, \boldsymbol{\beta_0})', D \right)
}
where \eqn{(\boldsymbol{\alpha_0}, \boldsymbol{\beta_0})'} is the true
parameter vector. We can obtain an approximate sampling distribution for
\eqn{\hat{\boldsymbol{\gamma}}} by a parametric bootstrap in two steps,
\enumerate{
\item Sample \eqn{B} bootstrap replications of the vertical parameters from
\deqn{
(\hat{\boldsymbol{\alpha}}^b, \hat{\boldsymbol{\beta}}^b)' \sim N \left( (\hat{\boldsymbol{\alpha}}, \hat{\boldsymbol{\beta}})', \hat{D}  \right)
}
where \eqn{b} refers to the \eqn{b}'th bootstrap replicate.
\item Transform the bootstrap replicates to the time scale,
\deqn{
\hat{\boldsymbol{\gamma}}^b = \boldsymbol{\gamma}(\boldsymbol{t}; \hat{\boldsymbol{\alpha}}^b, \hat{\boldsymbol{\beta}}^b).
}
This transformation is implemented in \code{\link[=g_Delta_bis]{g_Delta_bis()}}.
}
}
