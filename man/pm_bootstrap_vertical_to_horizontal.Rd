% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametric-bootstrap.R
\name{pm_bootstrap_vertical_to_horizontal}
\alias{pm_bootstrap_vertical_to_horizontal}
\title{Parametric Bootstrap for Time-Specific Acceleration Factors}
\usage{
pm_bootstrap_vertical_to_horizontal(
  time_points,
  ctrl_estimates,
  exp_estimates,
  vcov,
  interpolation = "spline",
  B = 100,
  null = FALSE,
  constraints
)
}
\arguments{
\item{time_points}{Ordered vector that contains the times corresponding to
the estimated means in the \code{ctrl_estimates} vector. The first element
should be zero and correspond to the time of randomization.}

\item{ctrl_estimates}{Estimated mean outcome in the control group at the
fixed occasions corresponding to the times in \code{time_points}.}

\item{exp_estimates}{Estimated mean outcomes in the experimental group at
fixed occasions corresponding to the times in \code{time_points[-1]}. Note that
first element in \code{exp_estimates} should correspond to some time after
randomization.}

\item{vcov}{The variance-covariance matrix for the means. In order to map to
the correct estimates, this matrix should be the variance-covariance matrix
of \code{c(ctrl_means, exp_means)}. If an element of \code{c(ctrl_means, exp_means)}
is known (e.g., mean at baseline is zero when using change from baseline as
outcome), then the corresponding row and column in \code{vcov} should be set to
zero.}

\item{interpolation}{Which interpolation method to use?
\itemize{
\item \code{"linear"}: linear interpolation.
\item \code{"spline"}: natural cubic spline interpolation. This interpolation method has been most
thoroughly tested is most stable.
\item \verb{"monoH.FC}: monotone Hermite spline according to the method of Fritsch
and Carlson.
}}

\item{B}{Number of bootstrap replications.}

\item{null}{(boolean): conduct the bootstrap under the null hypothesis of no
treatment effect? Defaults to \code{FALSE}.}

\item{constraints}{Use the constrained generalized least squares estimator
for the vertical treatment effects.}
}
\value{
A \eqn{(B \times K)} matrix where the \eqn{b}'th row corresponds to
\eqn{\hat{\boldsymbol{\gamma}}^b} and \eqn{K = } \code{length(exp_estimates)}.
}
\description{
The \code{\link[=pm_bootstrap_vertical_to_horizontal]{pm_bootstrap_vertical_to_horizontal()}} function implements a parametric
bootstrap for the time-specific acceleration factors.
}
\details{
We can write the slowing factor at \eqn{\boldsymbol{t} = (t_1, ..., t_K)'}
as a function of the the mean parameters,
\deqn{
\boldsymbol{\gamma} = \boldsymbol{\gamma}(\boldsymbol{t}; \boldsymbol{\alpha}, \boldsymbol{\beta}).
}
Further assume that \eqn{\hat{\boldsymbol{\alpha}}} and \eqn{\hat{\boldsymbol{\beta}}}
are normally distributed,
\deqn{
(\hat{\boldsymbol{\alpha}}, \hat{\boldsymbol{\beta}})' \sim N\left( (\boldsymbol{\alpha_0}, \boldsymbol{\beta_0})', D \right)
}
where \eqn{(\boldsymbol{\alpha_0}, \boldsymbol{\beta_0})'} is the true
parameter vector. We can obtain an approximate sampling distribution for
\eqn{\hat{\boldsymbol{\gamma}}} by a parametric bootstrap in two steps,
\enumerate{
\item Sample \eqn{B} bootstrap replications of the vertical parameters from
\deqn{
(\hat{\boldsymbol{\alpha}}^b, \hat{\boldsymbol{\beta}}^b)' \sim N \left( (\hat{\boldsymbol{\alpha}}, \hat{\boldsymbol{\beta}})', \hat{D}  \right)
}
where \eqn{b} refers to the \eqn{b}'th bootstrap replicate.
\item Transform the bootstrap replicates to the time scale,
\deqn{
\hat{\boldsymbol{\gamma}}^b = \boldsymbol{\gamma}(\boldsymbol{t}; \hat{\boldsymbol{\alpha}}^b, \hat{\boldsymbol{\beta}}^b).
}
This transformation is implemented in \code{\link[=g_Delta_bis]{g_Delta_bis()}}.
}
}
